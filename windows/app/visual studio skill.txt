VS工具栏-工具-选项-文本编辑器-所有语言-显示行号

Home                                    快速跳到这一行的首部
End                                     快速跳到这一行的尾部
Shift+Home                              快速选中这一行光标前的部分
Shift+End                               快速选中这一行光标后的部分
Shift+direction                         快速选择文字

F9    　　  　　　　                      设置断点
F10                                     逐过程调试
F11                                     逐语句调试（一句一句执行）
F12                                     转到定义，到变量或函数定义的地方，与ctrl+-配合使用非常方便
Ctrl+]                                  匹配选中的括号（大括号、小括号都行），在多层循环+判断语句时非常方便
ctrl+Space                              代码补全
ctrl+tab                                在VS中切换打开的窗口，即切换各个文件
ctrl+I                                  递增搜索，与ctrl+F不同的是搜索期间不显示搜索对话框，且ctrl+F搜索下一个直接按Enter即可，而ctrl+I搜索下一个按ctrl+I或F3，Escape退出，连续按两次ctrl+I重复上次搜索
Ctrl+Shift+F                            旧式的文件搜索对话框（与记事本中的搜索替换框差不多，可以替换）
Ctrl+F3                                 为当前选中的部分进行搜索（不需要再输入要搜索的内容）
Shift+Alt+Enter                         最大化代码编写区域（代码全屏模式），即去掉所有其它辅助窗口只留下代码编写窗口，再按一次返回到原来界面
ctrl+K+C                                注释一段代码块
ctrl+K+U                                取消注释一段代码块
ctrl+K+D                                代码整理
ctrl+K+F                                只整理你选中的部分
Ctrl+L                                  剪切当前行
Ctrl+Shift+L                            删除当前行
Ctrl+M                                  展开或折叠当前的代码（展开或收缩方法，类等）
Ctrl+Z/Alt+Backspace                    Undo
Ctrl+Shift+Z/Ctrl+Y                     Redo

ALT+SHIFT+Arrow                         多行选取
Ctrl+G or double click line number      跳转到指定行号

vax最有用的几个快捷键：
Alt + G                                 在定义与声明之间互跳
Alt + O                                 在.h与.cpp之间互跳
Alt + Shift + Q                         鼠标定位到函数名上，若是在h文件中，按此快捷键会弹出右键菜单，里面有个选项--创建定义；若是在cpp文件中，则按此快捷键会弹出右键菜单，里面有一个选项--创建声明。 这在定义好接口之后，再来写实现时，配合Alt+O是非常快捷的。当然，这种情况下，鼠标右击与Alt+O配合会更快
Alt + Shift + R                         当想改掉一个类名或是其他东西的命名时，可能已经有很多地方引用这个名称了，这时按下此快捷键，可以很方便的辅助你重命名
Alt + Shift + S                         方便你寻找某个对象或变量等等
Alt + Shift + O                         定位文件。项目文件太多时，这个会帮上大忙，当然，你的文件名命名最好有个比较好的规范
Alt + Shift + F                         光标放到某个字符串上，按下此键，会找出所有引用了这个字符串的地方


give option in VS: Configuration Properties -> Debugging -> Command Arguments


Static Lib
Property Pages -> Common Properties -> References -> Add New Reference -> MyStaticLib
Property Pages -> Configuration Properties -> C/C++ -> General -> Additional Include Directories -> add .h dir

DLL Lib
Property Pages -> Configuration Properties -> C/C++ -> General -> Additional Include Directories -> add .h dir
Property Pages -> Configuration Properties -> Linker -> Input -> Additional Dependencies -> ..\Debug\SimpleDll.lib


Target platform X64 VS X86
Check your properties options in your linker settings at: Properties > Configuration Properties > Linker > Advanced > Target Machine. Select MachineX64 if you are targeting a 64 bit build, or MachineX86 if you are making a 32 bit build.
Select Build > Configuration Manager from the main menu in visual studio. Make sure your project has the correct platform specified. It is possible for the IDE to be set to build x64 but an individual project in the solution can be set to target win32. So yeah, visual studio leaves a lot of rope to hang yourself, but that's life.
Check your library files that they really are of the type of platform are targeting. This can be used by using dumpbin.exe which is in your visual studio VC\bin directory. use the -headers option to dump all your functions. Look for the machine entry for each function. it should include x64 if it's a 64 bit build.
In visual studio, select Tools > Options from the main menu. select Projects and Solutions > VC++ Directories. Select x64 from the Platform dropdown. Make sure that the first entry is: $(VCInstallDir)\bin\x86_amd64 followed by $(VCInstallDir)\bin.


error C4996: Function call with parameters that may be unsafe
Configuration Properties -> C/C++ -> Preprocessor -> Preprocessor Definitions       add _SCL_SECURE_NO_WARNINGS
